{{- $jaeger := print (include "saleor.fullname" .) "-jaeger-agent" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "saleor.fullname" . }}
  labels:
    {{- include "saleor.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "saleor.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: api
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "saleor.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: api
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "saleor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: service-account
          secret:
            secretName: {{ .Values.GACRedentialsSecretName }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - python 
            - manage.py
            - runserver
            - 0.0.0.0:8000
          env:
            - name: ALLOWED_HOSTS
              value: localhost,127.0.0.1{{- if .Values.ingress.enabled -}}
              {{- range .Values.ingress.hosts -}}
              {{- print "," .host -}}
              {{- end }}
              {{- end }}
            - name: STOREFRONT_URL
              value: {{ .Values.storefrontUrl }}
            - name: DASHBOARD_URL
              value: {{ .Values.dashboardUrl }}
            - name: SENTRY_DSN
              value: {{ .Values.sentryDSN }}
            - name: REDIS_URL
              value: {{ template "saleor.redis" . }}/1
            - name: CELERY_BROKER_URL
              value: {{ template "saleor.redis" . }}/0
            - name: CELERY_RESULT_BACKEND
              value: {{ template "saleor.redis" . }}/0
            - name: DEFAULT_FROM_EMAIL
              value: {{ .Values.defaultFromEmail }}
            - name: DATABASE_URL
              value: {{ template "saleor.postgresql" . }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretKey.name }}
                  key: {{ .Values.secretKey.key }}
            - name: GS_MEDIA_BUCKET_NAME
              value: {{ .Values.bucketName }}
            - name: GS_STORAGE_BUCKET_NAME
              value: {{ .Values.bucketName }}
            - name: GS_DEFAULT_ACL
              value: {{ .Values.defaultACL }}
            - name: DEBUG
              value: "{{ .Values.debug }}"
            - name: ENABLE_SSL
              value: "{{ .Values.enableSSL }}"
            - name: VATLAYER_USE_HTTPS
              value: "{{ .Values.vatlayerUseHttps }}"
            - name: ALLOWED_CLIENT_HOSTS
              value: {{ .Values.allowedClientHost }}
            - name: ALLOWED_GRAPHQL_ORIGINS
              value: {{ .Values.allowedGraphqlOrigins }}
            - name: GOOGLE_APPLICATION_CREDENTIALS
              value: {{ .Values.GACRedentialsPath }}
            - name: EMAIL_URL
              value: smtp://{{ .Values.MAILJET_USERNAME }}:{{ .Values.MAILJET_PASSWORD }}@{{ .Values.MAILJET_SMTP_SERVER }}:587/?tls=True
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: database
          volumeMounts:
            - name: service-account
              mountPath: {{ .Values.GACRedentialsDir }}
            # - name: JAEGER_AGENT_HOST
            #   value: {{ .Values.jaegerAgentHost | default $jaeger }}
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /health/
              port: http
          readinessProbe:
            httpGet:
              path: /health/
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - "/cloud_sql_proxy"
            - "-instances={{ .Values.connectionName }}=tcp:{{ .Values.databasePort }}"
            - "-credential_file={{ .Values.GACRedentialsPath }}"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
          - name: service-account
            mountPath: {{ .Values.GACRedentialsDir }}
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
