apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "saleor.fullname" . }}-migrate
  labels:
    {{- include "saleor.labels" . | nindent 4 }}
  annotations:
    helm.sh/hook: pre-upgrade,post-install
spec:
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "saleor.selectorLabels" . | nindent 8 }}
    spec:
      restartPolicy: "Never"
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "saleor.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: service-account
          secret:
            secretName: {{ .Values.GACRedentialsSecretName }}
        - name: tmp-pod
          emptyDir: {}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - bash
            - -c
            - |
              #!/bin/bash
              trap "touch /tmp/pod/main-terminated" EXIT
              python manage.py migrate && \
              python manage.py collectstatic --noinput;
          env:
            - name: DATABASE_URL
              value: {{ template "saleor.postgresql" . }}
            - name: SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secretKey.name }}
                  key: {{ .Values.secretKey.key }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: password
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.databaseSecret }}
                  key: database
          volumeMounts:
            - name: service-account
              mountPath: {{ .Values.GACRedentialsDir }}
            - name: tmp-pod
              mountPath: /tmp/pod
          resources:
            {{- toYaml .Values.migrateHook.resources | nindent 12 }}
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.17
          command:
            - bash
            - -c
            - |
              #!/bin/bash
            - "/cloud_sql_proxy"
            - "-instances={{ .Values.connectionName }}=tcp:{{ .Values.databasePort }}"
            - "-credential_file={{ .Values.GACRedentialsPath }} & CHILD_PID=$!"
          securityContext:
            runAsNonRoot: true
          volumeMounts:
          - name: service-account
            mountPath: {{ .Values.GACRedentialsDir }}
            readOnly: true
          - name: tmp-pod
            mountPath: /tmp/pod
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
